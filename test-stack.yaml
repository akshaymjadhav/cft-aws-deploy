AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template for creating a Lambda Layer
    
Resources:
	PipLayerLambdaRole:
	  Type: AWS::IAM::Role
	  Properties:
		AssumeRolePolicyDocument:
		  Version: 2012-10-17
		  Statement:
			- Action:
				- sts:AssumeRole
			  Effect: Allow
			  Principal:
				Service:
				  - lambda.amazonaws.com
		Policies:
		  - PolicyDocument:
			  Version: 2012-10-17
			  Statement:
				- Action:
				  - logs:CreateLogGroup
				  - logs:CreateLogStream
				  - logs:PutLogEvents
				  Effect: Allow
				  Resource:
					- !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/PipLayer-${AWS::StackName}:*
				- Action:
				  - lambda:PublishLayerVersion
				  - lambda:DeleteLayerVersion
				  Effect: Allow
				  Resource:
					- "*"
			PolicyName: lambda

	PipLayerLambda:
	  Type: AWS::Lambda::Function
	  Properties:
		Description: Create layers based on pip
		FunctionName: !Sub "PipLayer-${AWS::StackName}"
		Handler: index.handler
		MemorySize: 1024
		Role: !GetAtt PipLayerLambdaRole.Arn
		Runtime: python3.8
		Timeout: 300
		Code:
		  ZipFile: |
			import json
			import logging
			import pathlib
			import re
			import subprocess
			import sys
			import tempfile
			import typing as t
			import shutil
			import cfnresponse
			import boto3
			logger = logging.getLogger()
			logger.setLevel(logging.INFO)
			
	MyLayer:
	  Type: Custom::PipLayer
	  Properties:
		ServiceToken: !GetAtt PipLayerLambda.Arn
		Region: !Ref AWS::Region
		LayerName: mylayer
		Packages:
		  - numpy==1.20
		  - pandas>1.0
		  - abstractcp==0.9.6
		  - pillow
